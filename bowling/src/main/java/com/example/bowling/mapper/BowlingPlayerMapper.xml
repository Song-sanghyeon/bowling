<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.example.bowling.mapper.BowlingPlayerMapper">
  	<!-- 개인랭킹  -->
  	<select id="selectPlayerRanking" parameterType="com.example.bowling.vo.PlayerRecord"
  				 					 resultType="com.example.bowling.vo.PlayerRecord">
	  	select
	  		<choose>
	  			<when test="column.equals('matchGame')">
	  				row_number() over(order by matchGame desc) as rank,
	  			</when>
	  			<when test="column.equals('win')">
	  				row_number() over(order by win desc) as rank,
	  			</when>
	  			<when test="column.equals('draw')">
	  				row_number() over(order by draw desc) as rank,
	  			</when>
	  			<when test="column.equals('lose')">
	  				row_number() over(order by lose desc) as rank,
	  			</when>
	  			<when test="column.equals('winRate')">
	  				row_number() over(order by winRate desc) as rank,
	  			</when>
	  			<when test="column.equals('scoreAvg')">
	  				row_number() over(order by scoreAvg desc) as rank,
	  			</when>
	  			<when test="column.equals('strikeAvg')">
	  				row_number() over(order by strikeAvg desc) as rank,
	  			</when>
	  			<when test="column.equals('spareAvg')">
	  				row_number() over(order by spareAvg desc) as rank,
	  			</when>
	  		</choose>
	  		   gr.player_no as playerNo, p.player_name as playerName ,p.player_gender as gender,
		      count(*) as matchGame, 
		      sum(case 
		         when gr.team_result = 'win'
		         then 1
		         else 0
		      end) as win,
		      sum(case 
		         when gr.team_result = 'draw'
		         then 1
		         else 0
		      end) as draw,
		      sum(case 
		         when gr.team_result = 'lose'
		         then 1
		         else 0
		      end) as lose,
		      round(sum(case 
		         when gr.team_result = 'win'
		         then 1
		         else 0
		      end)/count(*)*100) as winRate,
		      round(avg(gr.team_score)) as scoreAvg,
		      ss.strike as strikeAvg,
		      ss.spare as spareAvg
		from(select game_no, hplayer_no as player_no, hteam_score as team_score, hteam_result as team_result
		      from game_result
		      union all
		      select game_no, aplayer_no as player_no, ateam_score as team_score, ateam_result as team_result
		      from game_result) gr
		INNER JOIN player p
		INNER JOIN       (
					SELECT b.game_no, b.player_no,
					      sum(case
					         when ballevent = 'strike'
					         then 1
					         ELSE 0
					      END) AS strike,
					      sum(case
					         when ballevent = 'spare'
					         then 1
					         ELSE 0
					      END) AS spare
					FROM (SELECT game_no, player_no, frame, turn, pin1+pin2+pin3+pin4+pin5+pin6+pin7+pin8+pin9+pin10 AS pinsum,
					      (case
					         when turn = 1
					         then case
					                when pin1+pin2+pin3+pin4+pin5+pin6+pin7+pin8+pin9+pin10 = 10
					                then 'strike'
					                when pin1+pin2+pin3+pin4+pin5+pin6+pin7+pin8+pin9+pin10 + LEAD(pin1+pin2+pin3+pin4+pin5+pin6+pin7+pin8+pin9+pin10) over(ORDER BY game_no, player_no, frame, turn) = 10
					                AND pin1+pin2+pin3+pin4+pin5+pin6+pin7+pin8+pin9+pin10 != 10
					                then 'spare'
					                  ELSE 0
					              end
					         ELSE 0
					      END) AS ballevent
					      from game_player
					      ORDER BY game_no, player_no, frame, turn) b
					GROUP BY b.player_no 
				)ss
		ON gr.player_no = p.player_no AND gr.player_no = ss.player_no
		<if test="gender != ('ALL')">
			WHERE p.player_gender = #{gender}
		</if>
		group by gr.player_no
		<choose>
  			<when test="column.equals('matchGame')">
  				order by matchGame desc
  			</when>
  			<when test="column.equals('win')">
  				order by win desc
  			</when>
  			<when test="column.equals('draw')">
  				order by draw desc
  			</when>
  			<when test="column.equals('lose')">
  				order by lose desc
  			</when>
  			<when test="column.equals('winRate')">
  				order by winRate desc
  			</when>
  			<when test="column.equals('scoreAvg')">
  				order by scoreAvg desc
  			</when>
  			<when test="column.equals('strikeAvg')">
  				order by strikeAvg desc
  			</when>
  			<when test="column.equals('spareAvg')">
  				order by spareAvg desc
  			</when>
	  	</choose>
  	</select>
  </mapper>