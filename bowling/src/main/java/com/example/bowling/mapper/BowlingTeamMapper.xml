<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.example.bowling.mapper.BowlingTeamMapper">
	<!-- 팀의 랭킹을 불러오는 쿼리 -->
	<select id="selectTeamRecord" parameterType="com.example.bowling.vo.TeamRecord" resultType="com.example.bowling.vo.TeamRecord">
		SELECT
	  		<choose>
	  			<when test="column.equals('matchGame')">
	  				row_number() over(order by matchGame desc) as rank,
	  			</when>
	  			<when test="column.equals('win')">
	  				row_number() over(order by win desc) as rank,
	  			</when>
	  			<when test="column.equals('draw')">
	  				row_number() over(order by draw desc) as rank,
	  			</when>
	  			<when test="column.equals('lose')">
	  				row_number() over(order by lose desc) as rank,
	  			</when>
	  			<when test="column.equals('winAvg')">
	  				row_number() over(order by winAvg desc) as rank,
	  			</when>
	  			<when test="column.equals('scoreAvg')">
	  				row_number() over(order by scoreAvg desc) as rank,
	  			</when>
	  			<when test="column.equals('strikeAvg')">
	  				row_number() over(order by strikeAvg desc) as rank,
	  			</when>
	  		</choose>
         r.team_name AS teamName,
         round(r.score/(r.win+r.draw+r.lose)) AS scoreAvg,r.win,r.draw,r.lose,(r.win+r.draw+r.lose) AS matchGame,
         round(r.win/(r.win+r.draw+r.lose)*100) AS winAvg,round(strike/player_count) AS strikeAvg
		FROM
		(
		SELECT t.team_name,sum(t.score) AS score,sum(t.win) AS win,sum(t.draw) AS draw,sum(t.lose) AS lose
		from
		(SELECT game_no,hteam_name AS team_name,round(SUM(hteam_score)) AS score,
		   sum(case 
		      when hteam_result='win' 
		         then 1 
		         ELSE 0 
		         END) AS win,
		   SUM(case   
		      when hteam_result='draw'
		         then 1
		         ELSE 0
		         END) AS draw,
		   SUM(case
		      when hteam_result='lose'
		         then 1
		         ELSE 0
		         END) AS lose
		FROM game_result
		GROUP BY hteam_name
		UNION all
		SELECT game_no,ateam_name AS team_name,round(SUM(ateam_score)) AS score,
		   SUM(case
		      when ateam_result='win'
		         then 1
		         ELSE 0
		         END) AS win,
		   SUM(case   
		      when ateam_result='draw'
		         then 1
		         ELSE 0
		         END) AS draw,
		   SUM(case
		      when ateam_result='lose'
		         then 1
		         ELSE 0
		         END) AS lose
		FROM game_result
		GROUP BY ateam_name) t
		GROUP BY team_name
		) r INNER JOIN 
		(SELECT sum(strike) AS strike,COUNT(*) AS player_count,r.team_name
		from
		(SELECT gp.game_no,gp.player_no,tpc.team_name,
		   sum(case 
		         when pin1+pin2+pin3+pin4+pin5+pin6+pin7+pin8+pin9+pin10=10 AND turn=1 AND frame!=10
		            then 1
		         when frame=10 AND  pin1+pin2+pin3+pin4+pin5+pin6+pin7+pin8+pin9+pin10=10
		            then 1
		            ELSE 0
		         END) AS 'strike'
		FROM game_player gp
		INNER JOIN team_player_contract tpc
		INNER JOIN player p
		ON tpc.player_no=gp.player_no
		AND tpc.player_no = p.player_no
		<if test="gender != ('ALL')">
			WHERE p.player_gender = #{gender}
		</if>
		GROUP BY gp.player_no) r
		GROUP BY r.team_name
		) s
		ON r.team_name =s.team_name
		GROUP BY teamName
		<choose>
  			<when test="column.equals('matchGame')">
  				order by matchGame desc
  			</when>
  			<when test="column.equals('win')">
  				order by win desc
  			</when>
  			<when test="column.equals('draw')">
  				order by draw desc
  			</when>
  			<when test="column.equals('lose')">
  				order by lose desc
  			</when>
  			<when test="column.equals('winAvg')">
  				order by winAvg desc
  			</when>
  			<when test="column.equals('scoreAvg')">
  				order by scoreAvg desc
  			</when>
  			<when test="column.equals('strikeAvg')">
  				order by strikeAvg desc
  			</when>
	  	</choose>
	</select>
	
	<!-- 팀의 각 핀을 쓰러트린 평균을 불러오는 쿼리 -->
	<select id="selectTeamPinAvgChart" parameterType="String" resultType="com.example.bowling.vo.TeamChart">
		SELECT *
		FROM (SELECT gt.team_name AS teamName, AVG(gt.pp1) AS pin1, AVG(gt.pp2) AS pin2, AVG(gt.pp3) AS pin3,
				 AVG(gt.pp4) AS pin4, AVG(gt.pp5) AS pin5, AVG(gt.pp6) AS pin6, AVG(gt.pp7) AS pin7,
				 AVG(gt.pp8) AS pin8, AVG(gt.pp9) AS pin9, AVG(gt.pp10) AS pin10
		from(SELECT p.game_no, tp.team_name,
				sum(p.p1) AS pp1, sum(p.p2) AS pp2, sum(p.p3) AS pp3, 
				sum(p.p4) AS pp4, sum(p.p5) AS pp5, sum(p.p6) AS pp6, 
				sum(p.p7) AS pp7, sum(p.p8) AS pp8, sum(p.p9) AS pp9, sum(p.p10) AS pp10
		from(SELECT game_no, player_no, frame, SUM(pin1) AS p1, SUM(pin2) AS p2, 
						SUM(pin3) AS p3, SUM(pin4) AS p4, SUM(pin5) AS p5, 
						SUM(pin6) AS p6, SUM(pin7) AS p7, SUM(pin8) AS p8, SUM(pin9) AS p9, SUM(pin10) AS p10
				FROM game_player
				WHERE frame != 10
				GROUP BY game_no, player_no, frame
				UNION ALL
				SELECT game_no, player_no, frame, SUM(pin1) AS p1, SUM(pin2) AS p2, 
								SUM(pin3) AS p3, SUM(pin4) AS p4, SUM(pin5) AS p5, 
								SUM(pin6) AS p6, SUM(pin7) AS p7, SUM(pin8) AS p8, SUM(pin9) AS p9, SUM(pin10) AS p10
				FROM game_player
				WHERE frame = 10
				GROUP BY game_no, player_no, frame, turn) p
		INNER join team_player_contract tp
		ON p.player_no = tp.player_no
		WHERE tp.team_name = #{teamName}
		GROUP BY p.game_no, tp.team_name) gt
		GROUP BY gt.team_name) pa
	</select>

	<!-- 팀의 연차별 승률을 불러오는 쿼리 -->
	<select id="selectTeamWinChart" parameterType="String" resultType="com.example.bowling.vo.TeamChart">
		SELECT gg.game_no, gg.team_name AS teamName,
		      ROUND(SUM(CASE
		         WHEN gg.team_result = 'win'
		         THEN 1
		         ELSE 0
		      END)/COUNT(*)*100) 'winrate',
		      gg.game_date AS gameDate
		FROM(SELECT gr.game_no, gr.team_name, gr.team_score, gr.team_result, g.game_date
				FROM(select game_no, hteam_name as team_name, hteam_score as team_score, hteam_result as team_result
				FROM game_result
				UNION ALL
				SELECT game_no, ateam_name as team_name, ateam_score as team_score, ateam_result as team_result
				FROM game_result) gr
				INNER JOIN game g ON gr.game_no = g.game_no) gg
		WHERE gg.team_name = #{teamName}
		GROUP BY gg.team_name, YEAR(gg.game_date)
	</select>
	
	
	<!-- 팀의 평균 스트라이크 횟수를 불러오는 쿼리 -->
	<select id="selectTeamStrikeChart" parameterType="String" resultType="com.example.bowling.vo.TeamChart">
		SELECT
			p.player_name AS playerName,
			round(AVG(e.strike),1) AS avgStrike,
			tpc.team_name AS teamName
		FROM
			(SELECT
				b.game_no,
				b.player_no,
				sum(CASE
				   WHEN ballevent = 'strike'
				   THEN 1
				   ELSE 0
				END) AS strike
				
			FROM
				(SELECT
					game_no,
					player_no,
					frame,
					turn,
					pin1+pin2+pin3+pin4+pin5+pin6+pin7+pin8+pin9+pin10 AS pinsum,
		            (CASE
		               WHEN turn = 1
		               THEN CASE
		                      WHEN pin1+pin2+pin3+pin4+pin5+pin6+pin7+pin8+pin9+pin10 = 10
		                      THEN 'strike'
		                        ELSE 0
		                    END
		               ELSE 0
		            END) AS ballevent
				FROM 
					game_player
		     	ORDER BY
		     		game_no, player_no, frame, turn) b
			GROUP BY 
				b.game_no, b.player_no) e
		INNER JOIN 
			player p 
		ON 
			e.player_no = p.player_no
		INNER JOIN 
			team_player_contract tpc 
		ON 
			e.player_no = tpc.player_no
		WHERE 
			tpc.team_name = #{teamName}
		AND
			tpc.player_to_date = '9999-01-01'	
		GROUP 
			BY e.player_no
	</select>
	
	<!-- 해당 팀의 상세 기록 불러오는 쿼리 -->
	<select id="selectTeamReport" parameterType="String" resultType="com.example.bowling.vo.TeamRecord">
		select
			t as teamName,
			sum(t.c) as totalGame,
			sum(t.w) as win,
			sum(t.d) as draw,
			sum(t.l) as lose,
			round(avg(t.a),0) as avgScore,
			round(t.w/t.c*100) as avgWin,
			round(sum(t.s),0) as totalScore
			
		from(
			select
				hteam_name as t,
				count(*) as c,
				sum(hteam_result='win') as w,
				sum(hteam_result='draw') as d,
				sum(hteam_result='lose') as l,
				avg(hteam_score) as a,
				sum(hteam_score) as s
		from game_result
		group by hteam_name
		union
		select
			ateam_name as t,
			count(*) as c ,
			sum(ateam_result='win') as w,
			sum(ateam_result='draw') as d,
			sum(ateam_result='lose') as l,
			avg(ateam_score) as s,
			sum(ateam_score) as s
		from game_result
		group by ateam_name
		) as t
		where t = #{teamName}
		group by t
	</select>
</mapper>